{"version":3,"file":"static/js/955.608c2247.chunk.js","mappings":"wOACA,EAA2B,gCAA3B,EAA4E,sCAA5E,EAA2H,8BAA3H,EAAsK,kCAAtK,EAAoN,iCAApN,EAA6P,6BAA7P,EAAiS,4BAAjS,EAA0U,4D,SCIpUA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACfC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAgElB,MA5DA,WACE,OAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAAUI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAQM,EAAtB,GAC5B,GAAE,CAACL,KAGF,gCACGF,IAAQ,iBAAKQ,UAAWC,EAAhB,WACP,gBAAKC,IAbM,sCAaYV,EAAKW,YAAaH,UAAWC,EAAcG,IAAI,iBACtE,2BACE,yBACE,wBAAKZ,EAAKa,oBAEZ,yBACE,0BAAG,iBAAML,UAAWC,EAAjB,yBAAH,IAAyDT,EAAKc,mBAEhE,yBACE,cAAGN,UAAWC,EAAd,yBAEF,yBACE,uBAAIT,EAAKe,cAEX,yBACE,cAAGP,UAAWC,EAAd,uBAEF,eAAID,UAAWC,EAAf,SACGT,EAAKgB,OAAOC,KAAI,SAACC,GAChB,OACE,cAAGV,UAAWC,EAAd,SAA6CS,EAAMC,MAAnBD,EAAMC,KAEzC,aAIP,mBACA,gBAAIX,UAAWC,EAAf,WACE,oDACA,yBACE,SAAC,KAAD,CAASW,GAAG,OAAOZ,UAAW,SAAAa,GAAQ,OACnCA,EAASA,SAAWZ,EAAmBA,CADJ,EAAtC,qBAGF,yBACE,SAAC,KAAD,CAASW,GAAG,UAAUZ,UAAW,SAAAa,GAAQ,OACtCA,EAASA,SAAWZ,EAAmBA,CADD,EAAzC,2BAIJ,mBACA,SAAC,EAAAa,SAAD,CAAUC,UAAU,eAAId,MAAO,CAAEe,UAAW,UAAxB,8DAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,UAAUC,SAAS,SAAC9B,EAAD,OAC/B,SAAC,KAAD,CAAO6B,KAAK,OAAOC,SAAS,SAAC5B,EAAD,aAKrC,C,+KClEK6B,EAAW,mCAIXC,EAAU,qCAEhB,SAASC,IACP,OAAOC,IAAAA,IAAA,UALW,gDAKX,oBAAoCH,EAApC,WACR,CAED,SAASI,EAAgBC,GACvB,OAAOF,IAAAA,IAAA,UARS,4CAQT,oBAAkCH,EAAlC,yBAA2DK,GACnE,CAED,SAAS3B,EAAa4B,GACpB,OAAOH,IAAAA,IAAA,UAAaF,EAAb,YAAwBK,EAAxB,oBAAsCN,EAAtC,mBACR,CAED,SAASO,EAAYD,GACnB,OAAOH,IAAAA,IAAA,UAAaF,EAAb,YAAwBK,EAAxB,4BAA8CN,EAA9C,0BACR,CAED,SAASQ,EAAYF,GACnB,OAAOH,IAAAA,IAAA,UAAaF,EAAb,YAAwBK,EAAxB,4BAA8CN,EAA9C,mBACR,C","sources":["webpack://react-homework-template/./src/components/views/AboutFilmCard.module.css?0a0b","components/views/AboutFilmCard.jsx","helpers/FetchAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"AboutFilmCard_filmCard__dl0Se\",\"additionalInfo\":\"AboutFilmCard_additionalInfo__AlQiZ\",\"poster\":\"AboutFilmCard_poster__kFY+E\",\"genresList\":\"AboutFilmCard_genresList__c-vFw\",\"largeText\":\"AboutFilmCard_largeText__awSLI\",\"genre\":\"AboutFilmCard_genre__gZdGp\",\"link\":\"AboutFilmCard_link__Vk9ds\",\"activeLink\":\"AboutFilmCard_activeLink__wbDKi AboutFilmCard_link__Vk9ds\"};","import { lazy, useEffect, useState, Suspense } from 'react';\nimport { NavLink, useParams, Route, Routes } from 'react-router-dom';\nimport { getFilmById } from '../../helpers/FetchAPI';\nimport style from './AboutFilmCard.module.css';\n\nconst Reviews = lazy(() => import('./Reviews'));\nconst Cast = lazy(() => import('./Cast'));\n\nconst IMAGE_PATH = 'https://image.tmdb.org/t/p/original';\n\nfunction AboutFilmCard() {\n  const [film, setFilm] = useState();\n  const { filmById } = useParams();\n\n  useEffect(() => {\n    getFilmById(filmById).then(({ data }) => setFilm(data));\n  }, [filmById]);\n\n  return (\n    <>\n      {film && <div className={style.filmCard}>\n        <img src={IMAGE_PATH + film.poster_path} className={style.poster} alt='Film Poster'/>\n        <ul>\n          <li>\n            <h2>{film.original_title}</h2>\n          </li>\n          <li>\n            <p><span className={style.largeText}>User Score:</span> {film.vote_average}</p>\n          </li>\n          <li>\n            <p className={style.largeText}>Overview</p>\n          </li>\n          <li>\n            <p>{film.overview}</p>\n          </li>\n          <li>\n            <p className={style.largeText}>Genres</p>\n          </li>\n          <li className={style.genresList}>\n            {film.genres.map((genre) => {\n              return (\n                <p className={style.genre} key={genre.name}>{genre.name}</p>\n              );\n            })}\n          </li>\n        </ul>\n      </div>}\n      <hr />\n      <ul className={style.additionalInfo}>\n        <h2>Additional information</h2>\n        <li>\n          <NavLink to='cast' className={isActive =>\n            (isActive.isActive ? style.activeLink : style.link)}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to='reviews' className={isActive =>\n            (isActive.isActive ? style.activeLink : style.link)}>Reviews</NavLink>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<h1 style={{ textAlign: 'center' }}>Загрузка</h1>}>\n        <Routes>\n          <Route path='reviews' element={<Reviews />} />\n          <Route path='cast' element={<Cast />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n\nexport default AboutFilmCard;\n","import axios from 'axios';\n\nconst AUTH_KEY = \"fc2da78951ef629dde551fb1c9e58ef8\";\n\nconst TrendingURL = \"https://api.themoviedb.org/3/trending/all/day\";\nconst SearchURL = 'https://api.themoviedb.org/3/search/movie';\nconst findURL = \"https://api.themoviedb.org/3/movie\";\n\nfunction getTrendingFilms () {\n  return axios.get(`${TrendingURL}?api_key=${AUTH_KEY}&page=1`)\n}\n\nfunction getFilmsByName (require) {\n  return axios.get(`${SearchURL}?api_key=${AUTH_KEY}&page=1&query=${require}`)\n}\n\nfunction getFilmById (id) {\n  return axios.get(`${findURL}/${id}?api_key=${AUTH_KEY}&language=en-US`)\n}\n\nfunction getReviews (id) {\n  return axios.get(`${findURL}/${id}/reviews?api_key=${AUTH_KEY}&language=en-US&page=1`)\n}\n\nfunction getCredits (id) {\n  return axios.get(`${findURL}/${id}/credits?api_key=${AUTH_KEY}&language=en-US`)\n}\n\nexport { getTrendingFilms, getFilmsByName, getFilmById, getReviews, getCredits };\n"],"names":["Reviews","lazy","Cast","useState","film","setFilm","filmById","useParams","useEffect","getFilmById","then","data","className","style","src","poster_path","alt","original_title","vote_average","overview","genres","map","genre","name","to","isActive","Suspense","fallback","textAlign","path","element","AUTH_KEY","findURL","getTrendingFilms","axios","getFilmsByName","require","id","getReviews","getCredits"],"sourceRoot":""}